
  <!-- ======================== Security constraints ====================== -->

<%- [@security_constraints].flatten.compact.each do |sc| -%>
  <%- @wrc = sc.fetch('web-resource-collection', {}) -%>
  <%- @ac = sc.fetch('auth-constraint', {}) -%>
    <security-constraint>
        <display-name><%= sc['display-name'].encode(:xml => :text) %></display-name>
        <%- if ! @wrc.empty? -%>
        <web-resource-collection>
            <%- if @wrc.has_key?('web-resource-name') -%>
            <web-resource-name><%= @wrc['web-resource-name'].encode(:xml => :text) %></web-resource-name>
            <%- end -%>
            <%- @wrc.fetch('url-pattern', []).each do |value| -%>
            <url-pattern><%= "#{value}".encode(:xml => :text) %></url-pattern>
            <%- end -%>
            <%- @wrc.fetch('http-method', []).each do |value| -%>
            <http-method><%= "#{value}".encode(:xml => :text) %></http-method>
            <%- end -%>
            <%- @wrc.fetch('http-method-omission', []).each do |value| -%>
            <http-method-omission><%= "#{value}".encode(:xml => :text) %></http-method-omission>
            <%- end -%>
        </web-resource-collection>
        <%- end -%>
        <%- if ! @ac.empty? -%>
        <auth-constraint>
            <%- @ac.fetch('role-name', []).each do |value| -%>
            <role-name><%= "#{value}".encode(:xml => :text) %></role-name>
            <%- end -%>
        </auth-constraint>
        <%- end -%>
    </security-constraint>
<%- end -%>
